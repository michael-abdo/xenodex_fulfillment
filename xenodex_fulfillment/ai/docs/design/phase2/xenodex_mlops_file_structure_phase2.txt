/Users/Mike/Xenodex/fulfillment/
├── README.md
├── pyproject.toml
├── requirements.txt
├── docker-compose.yml
├── .env.example
├── .gitignore
├── Makefile
│
├── config/
│   ├── __init__.py
│   ├── base.py                    # Base configuration
│   ├── development.py             # Dev environment settings
│   ├── production.py              # Prod environment settings
│   ├── model_configs/
│   │   ├── f_t_detector.yaml     # F/T detector hyperparameters
│   │   ├── di_de_detector.yaml   # Di/De detector hyperparameters
│   │   └── ensemble.yaml         # Ensemble logic configuration
│   └── data_configs/
│       ├── celebrity_dataset.yaml
│       ├── youtube_extraction.yaml
│       └── validation_splits.yaml
│
├── data/
│   ├── raw/                      # Never modify - immutable
│   │   ├── celebrities/
│   │   │   ├── celebrity_labels.csv
│   │   │   └── youtube_metadata.json
│   │   └── external/             # Third-party datasets
│   │       └── mbti_research/
│   ├── interim/                  # Intermediate processing
│   │   ├── transcripts/
│   │   │   ├── raw_transcripts/
│   │   │   └── cleaned_transcripts/
│   │   └── story_extraction/
│   │       ├── candidate_stories/
│   │       └── validated_stories/
│   ├── processed/                # Analysis-ready data
│   │   ├── training_sets/
│   │   │   ├── f_t_detector/
│   │   │   │   ├── train.jsonl
│   │   │   │   ├── val.jsonl
│   │   │   │   └── test.jsonl
│   │   │   └── di_de_detector/
│   │   │       ├── train.jsonl
│   │   │       ├── val.jsonl
│   │   │       └── test.jsonl
│   │   └── features/
│   │       ├── text_features/
│   │       └── audio_features/   # Future expansion
│   └── external/                 # Downloaded/cached data
│       ├── youtube_videos/
│       └── pretrained_models/
│
├── src/
│   ├── __init__.py
│   ├── xenodex/
│   │   ├── __init__.py
│   │   ├── core/
│   │   │   ├── __init__.py
│   │   │   ├── config.py         # Configuration management
│   │   │   ├── logging.py        # Centralized logging
│   │   │   └── exceptions.py     # Custom exceptions
│   │   ├── data/
│   │   │   ├── __init__.py
│   │   │   ├── youtube_extractor.py     # Video/audio extraction
│   │   │   ├── transcription.py         # Speech-to-text
│   │   │   ├── story_extractor.py       # LLM story identification
│   │   │   ├── data_validator.py        # Data quality checks
│   │   │   └── preprocessing.py         # Text cleaning/formatting
│   │   ├── features/
│   │   │   ├── __init__.py
│   │   │   ├── text_features.py         # NLP feature extraction
│   │   │   ├── audio_features.py        # Future: prosodic features
│   │   │   └── behavioral_features.py   # Future: interaction patterns
│   │   ├── models/
│   │   │   ├── __init__.py
│   │   │   ├── base_detector.py         # Abstract detector class
│   │   │   ├── f_t_detector.py          # F/T binary classifier
│   │   │   ├── di_de_detector.py        # Di/De binary classifier
│   │   │   ├── ensemble.py              # Multi-detector logic
│   │   │   └── model_registry.py        # Model versioning/tracking
│   │   ├── training/
│   │   │   ├── __init__.py
│   │   │   ├── trainer.py               # Training orchestration
│   │   │   ├── fine_tuner.py            # OpenAI fine-tuning wrapper
│   │   │   ├── evaluator.py             # Model evaluation metrics
│   │   │   └── hyperparameter_tuner.py  # Automated tuning
│   │   ├── inference/
│   │   │   ├── __init__.py
│   │   │   ├── predictor.py             # Single prediction interface
│   │   │   ├── batch_predictor.py       # Batch processing
│   │   │   └── api_client.py            # OpenAI API management
│   │   └── utils/
│   │       ├── __init__.py
│   │       ├── file_utils.py
│   │       ├── metrics.py
│   │       └── visualization.py
│   └── cli/
│       ├── __init__.py
│       ├── main.py                      # CLI entry point
│       ├── train.py                     # Training commands
│       ├── predict.py                   # Prediction commands
│       └── data.py                      # Data processing commands
│
├── tests/
│   ├── __init__.py
│   ├── conftest.py                      # Pytest configuration
│   ├── unit/
│   │   ├── test_data/
│   │   ├── test_models/
│   │   └── test_training/
│   ├── integration/
│   │   ├── test_pipeline/
│   │   └── test_api/
│   └── fixtures/
│       ├── sample_celebrities.csv
│       ├── sample_stories.json
│       └── mock_responses/
│
├── scripts/
│   ├── setup_environment.sh            # Environment setup
│   ├── download_data.py                 # Data acquisition
│   ├── validate_data.py                 # Data quality checks
│   ├── train_baseline.py                # Baseline training pipeline
│   └── deploy_models.py                 # Model deployment
│
├── notebooks/
│   ├── 01_data_exploration.ipynb
│   ├── 02_story_extraction_analysis.ipynb
│   ├── 03_baseline_model_experiments.ipynb
│   └── 04_error_analysis.ipynb
│
├── models/                              # Trained model artifacts
│   ├── checkpoints/
│   │   ├── f_t_detector/
│   │   │   ├── v1.0.0/
│   │   │   └── v1.1.0/
│   │   └── di_de_detector/
│   │       └── v1.0.0/
│   ├── production/
│   │   ├── f_t_detector_prod.pkl
│   │   └── ensemble_prod.pkl
│   └── experiments/
│       ├── experiment_001/
│       └── experiment_002/
│
├── monitoring/
│   ├── __init__.py
│   ├── model_drift.py                   # Data/concept drift detection
│   ├── performance_tracker.py           # Accuracy monitoring
│   └── alerts.py                        # Alert system
│
├── deployment/
│   ├── docker/
│   │   ├── Dockerfile.training
│   │   ├── Dockerfile.api
│   │   └── Dockerfile.batch
│   ├── kubernetes/
│   │   ├── training-job.yaml
│   │   └── api-deployment.yaml
│   └── terraform/                       # Infrastructure as code
│       ├── main.tf
│       └── variables.tf
│
├── docs/
│   ├── api_reference.md
│   ├── model_documentation.md
│   ├── deployment_guide.md
│   └── troubleshooting.md
│
├── pipeline/                            # Your original concept expanded
│   ├── __init__.py
│   ├── orchestrator.py                  # Pipeline coordination
│   ├── stages/
│   │   ├── data_ingestion.py
│   │   ├── preprocessing.py
│   │   ├── training.py
│   │   ├── evaluation.py
│   │   └── deployment.py
│   └── schedulers/
│       ├── airflow_dags/               # If using Airflow
│       └── cron_jobs/
│
├── interface/                           # Your original concept expanded
│   ├── api/
│   │   ├── __init__.py
│   │   ├── app.py                      # FastAPI/Flask application
│   │   ├── routes/
│   │   │   ├── predict.py
│   │   │   ├── training.py
│   │   │   └── health.py
│   │   └── middleware/
│   │       ├── auth.py
│   │       └── rate_limiting.py
│   ├── web/                            # Optional web interface
│   │   ├── static/
│   │   ├── templates/
│   │   └── app.py
│   └── cli/                            # Command-line interface
│       └── commands/
│
└── logs/                               # Application logs
    ├── training/
    ├── inference/
    └── api/